{"ast":null,"code":"var _jsxFileName = \"/home/cos/Desktop/Development Project/News_Ad_website/backend/news_all/news_all_frontend/src/screens/LoginScreens.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { userLoginActions } from \"../actions/userActions\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Grid, Paper, Typography, Avatar, TextField, Button } from \"@mui/material\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport LockOpenIcon from '@mui/icons-material/LockOpen';\nimport Loaders from \"../components/Loader\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport \"../css_styles/LoginScreen.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LoginScreens = () => {\n  _s();\n\n  const avatarStyle = {\n    backgroundColor: 'green'\n  };\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    error: loginUserError,\n    loading: loginUserLoading,\n    userInfo\n  } = userLogin;\n  useEffect(() => {\n    if (userInfo) {\n      navigate(-1);\n    }\n  });\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(userLoginActions(username, password));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: \"paperHeader\",\n        elevation: 10,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          className: \"gridHeader\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            className: \"gridIcon\",\n            align: \"center\",\n            children: [loginUserLoading && /*#__PURE__*/_jsxDEV(Loaders, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 36\n            }, this), loginUserError && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              type: \"error\",\n              error: loginUserError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n              style: avatarS,\n              children: /*#__PURE__*/_jsxDEV(LockOpenIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"username\",\n            className: \"input\",\n            type: \"text\",\n            placeholder: \"username\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            required: true,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"password\",\n            className: \"input\",\n            type: \"password\",\n            placeholder: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            fullWidth: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            label: \"Remember me\",\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              name: \"checkedB\",\n              color: \"success\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"button\",\n            onClick: submitHandler,\n            type: \"submit\",\n            color: \"success\",\n            variant: \"contained\",\n            fullWidth: true,\n            children: \"Sign IN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: \"text\",\n            children: \"No Account ?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            className: \"linkText\",\n            to: \"/register\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: \"text\",\n              children: \"sign up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(LoginScreens, \"3DPX4HRedZ5mK1Wps3JCCOE0HDU=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n\n_c = LoginScreens;\nexport default LoginScreens;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginScreens\");","map":{"version":3,"sources":["/home/cos/Desktop/Development Project/News_Ad_website/backend/news_all/news_all_frontend/src/screens/LoginScreens.js"],"names":["React","useState","useEffect","useSelector","useDispatch","userLoginActions","Link","useNavigate","Grid","Paper","Typography","Avatar","TextField","Button","FormControlLabel","Checkbox","LockOpenIcon","Loaders","ErrorMessage","LoginScreens","avatarStyle","backgroundColor","username","setUsername","password","setPassword","dispatch","navigate","userLogin","state","error","loginUserError","loading","loginUserLoading","userInfo","submitHandler","e","preventDefault","avatarS","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { userLoginActions } from \"../actions/userActions\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  Grid,\n  Paper,\n  Typography,\n  Avatar,\n  TextField,\n  Button,\n} from \"@mui/material\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport LockOpenIcon from '@mui/icons-material/LockOpen';\nimport Loaders from \"../components/Loader\";\nimport ErrorMessage from \"../components/ErrorMessage\";\n\nimport \"../css_styles/LoginScreen.css\";\n\nconst LoginScreens = () => {\n  const avatarStyle = {backgroundColor:'green'}\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const userLogin = useSelector((state) => state.userLogin);\n\n  const {\n    error: loginUserError,\n    loading: loginUserLoading,\n    userInfo,\n  } = userLogin;\n\n  useEffect(() => {\n    if (userInfo) {\n      navigate(-1);\n    }\n  });\n\n  const submitHandler = (e) => {\n\n    e.preventDefault();\n    dispatch(userLoginActions(username, password));\n  };\n\n  return (\n    <>\n      <Grid>\n        <Paper className=\"paperHeader\" elevation={10}>\n          <Grid className=\"gridHeader\">\n            <Grid className=\"gridIcon\" align=\"center\">\n              {loginUserLoading && <Loaders />}\n              {loginUserError && (\n                <ErrorMessage type=\"error\" error={loginUserError} />\n              )}\n              <Avatar style={avatarS}>\n                <LockOpenIcon />\n              </Avatar>\n              <h2>sign In</h2>\n            </Grid>\n            <TextField\n              id=\"username\"\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"username\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              required\n              fullWidth\n            />\n            <TextField\n              id=\"password\"\n              className=\"input\"\n              type=\"password\"\n              placeholder=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              fullWidth\n              required\n            />\n            <FormControlLabel\n              label=\"Remember me\"\n              control={<Checkbox name=\"checkedB\" color=\"success\" />}\n            />\n\n            <Button\n            className=\"button\"\n              onClick={submitHandler}\n              type=\"submit\"\n              color=\"success\"\n              variant=\"contained\"\n              fullWidth\n            >\n              Sign IN\n            </Button>\n\n            {/* <Link className=\"linkText\" to=\"/forgotPassword\">\n              <Typography>Forgot password ?</Typography>\n            </Link> */}\n            <Typography className=\"text\">No Account ?</Typography>\n            <Link className=\"linkText\" to=\"/register\">\n              <Typography className=\"text\">sign up</Typography>\n\n            </Link>\n          </Grid>\n        </Paper>\n      </Grid>\n    </>\n  );\n};\n\nexport default LoginScreens;\n"]},"metadata":{},"sourceType":"module"}