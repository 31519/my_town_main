{"ast":null,"code":"import _regeneratorRuntime from\"/home/cos/Desktop/Development Project/News_Ad_website/backend/news_all/news_all_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/cos/Desktop/Development Project/News_Ad_website/backend/news_all/news_all_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{TECH_LIST_REQUEST,TECH_LIST_SUCCESS,TECH_LIST_FAIL,CREATE_TECH_REQUEST,CREATE_TECH_SUCCESS,CREATE_TECH_FAIL}from\"../constants/techConstants\";import axios from\"axios\";export var listTechs=function listTechs(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var _yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;dispatch({type:TECH_LIST_REQUEST});_context.next=4;return axios.get(\"http://127.0.0.1:8000/api/technology/list/\");case 4:_yield$axios$get=_context.sent;data=_yield$axios$get.data;dispatch({type:TECH_LIST_SUCCESS,payload:data});_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);dispatch({type:TECH_LIST_FAIL,payload:_context.t0.response&&_context.t0.response.data.detail?_context.t0.response.data.detail:_context.t0.message});case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var createTechs=function createTechs(author,title,description,url,urlToImage,publishedAt,content){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch,getState){var _getState,userInfo,config,_yield$axios$post,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;dispatch({type:CREATE_TECH_REQUEST});_getState=getState(),userInfo=_getState.userLogin.userInfo;config={headers:{\"Content-type\":\"application/json\",Authorization:\"Bearer \".concat(userInfo.token)}};console.log(\"userinfo action\",userInfo);console.log(\"before\");_context2.next=8;return axios.post(\"http://127.0.0.1:8000/api/technology/create/\",{'author':author,'title':title,'description':description,'url':url,'urlToImage':urlToImage,'publishedAt':publishedAt,'content':content},config);case 8:_yield$axios$post=_context2.sent;data=_yield$axios$post.data;console.log(\"after\");dispatch({type:CREATE_TECH_SUCCESS,payload:data});_context2.next=17;break;case 14:_context2.prev=14;_context2.t0=_context2[\"catch\"](0);dispatch({type:CREATE_TECH_FAIL,payload:_context2.t0.response&&_context2.t0.response.data.detail?_context2.t0.response.data.detail:_context2.t0.message});case 17:case\"end\":return _context2.stop();}}},_callee2,null,[[0,14]]);}));return function(_x2,_x3){return _ref2.apply(this,arguments);};}();};","map":{"version":3,"sources":["/home/cos/Desktop/Development Project/News_Ad_website/backend/news_all/news_all_frontend/src/actions/techActions.js"],"names":["TECH_LIST_REQUEST","TECH_LIST_SUCCESS","TECH_LIST_FAIL","CREATE_TECH_REQUEST","CREATE_TECH_SUCCESS","CREATE_TECH_FAIL","axios","listTechs","dispatch","type","get","data","payload","response","detail","message","createTechs","author","title","description","url","urlToImage","publishedAt","content","getState","userInfo","userLogin","config","headers","Authorization","token","console","log","post"],"mappings":"2ZAAA,OACEA,iBADF,CAEEC,iBAFF,CAGEC,cAHF,CAKEC,mBALF,CAMEC,mBANF,CAOEC,gBAPF,KAQO,4BARP,CAUA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,kGAAM,iBAAOC,QAAP,4JAE3BA,QAAQ,CAAC,CAAEC,IAAI,CAAET,iBAAR,CAAD,CAAR,CAF2B,sBAGJM,CAAAA,KAAK,CAACI,GAAN,CACrB,4CADqB,CAHI,uCAGnBC,IAHmB,kBAGnBA,IAHmB,CAO3BH,QAAQ,CAAC,CACPC,IAAI,CAAER,iBADC,CAEPW,OAAO,CAAED,IAFF,CAAD,CAAR,CAP2B,+EAY3BH,QAAQ,CAAC,CACPC,IAAI,CAAEP,cADC,CAEPU,OAAO,CACL,YAAMC,QAAN,EAAkB,YAAMA,QAAN,CAAeF,IAAf,CAAoBG,MAAtC,CACI,YAAMD,QAAN,CAAeF,IAAf,CAAoBG,MADxB,CAEI,YAAMC,OALL,CAAD,CAAR,CAZ2B,oEAAN,gEAAlB,CAsBP,MAAO,IAAMC,CAAAA,WAAW,CAAE,QAAbA,CAAAA,WAAa,CACxBC,MADwB,CAExBC,KAFwB,CAGxBC,WAHwB,CAIxBC,GAJwB,CAKxBC,UALwB,CAMxBC,WANwB,CAOxBC,OAPwB,kGAOX,kBAAOf,QAAP,CAAiBgB,QAAjB,4LAEXhB,QAAQ,CAAC,CAAEC,IAAI,CAAEN,mBAAR,CAAD,CAAR,CAFW,UAKNqB,QAAQ,EALF,CAIGC,QAJH,WAITC,SAJS,CAIGD,QAJH,CAOLE,MAPK,CAOI,CACbC,OAAO,CAAE,CACP,eAAgB,kBADT,CAEPC,aAAa,kBAAYJ,QAAQ,CAACK,KAArB,CAFN,CADI,CAPJ,CAaXC,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAA8BP,QAA9B,EACAM,OAAO,CAACC,GAAR,CAAY,QAAZ,EAdW,uBAeY1B,CAAAA,KAAK,CAAC2B,IAAN,CACrB,8CADqB,CAErB,CACE,SAAShB,MADX,CAEE,QAAQC,KAFV,CAGE,cAAcC,WAHhB,CAIE,MAAOC,GAJT,CAKE,aAAaC,UALf,CAME,cAAcC,WANhB,CAOE,UAAUC,OAPZ,CAFqB,CAWrBI,MAXqB,CAfZ,yCAeHhB,IAfG,mBAeHA,IAfG,CA4BXoB,OAAO,CAACC,GAAR,CAAY,OAAZ,EACAxB,QAAQ,CAAC,CAAEC,IAAI,CAAEL,mBAAR,CAA6BQ,OAAO,CAAED,IAAtC,CAAD,CAAR,CA7BW,qFA+BXH,QAAQ,CAAC,CACPC,IAAI,CAAEJ,gBADC,CAEPO,OAAO,CACL,aAAMC,QAAN,EAAkB,aAAMA,QAAN,CAAeF,IAAf,CAAoBG,MAAtC,CACI,aAAMD,QAAN,CAAeF,IAAf,CAAoBG,MADxB,CAEI,aAAMC,OALL,CAAD,CAAR,CA/BW,uEAPW,sEAAnB","sourcesContent":["import {\n  TECH_LIST_REQUEST,\n  TECH_LIST_SUCCESS,\n  TECH_LIST_FAIL,\n  \n  CREATE_TECH_REQUEST,\n  CREATE_TECH_SUCCESS,\n  CREATE_TECH_FAIL,\n} from \"../constants/techConstants\";\n\nimport axios from \"axios\";\n\nexport const listTechs = () => async (dispatch) => {\n  try {\n    dispatch({ type: TECH_LIST_REQUEST });\n    const { data } = await axios.get(\n      \"http://127.0.0.1:8000/api/technology/list/\"\n    );\n\n    dispatch({\n      type: TECH_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: TECH_LIST_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const createTechs= (       \n  author,\n  title,\n  description,\n  url,\n  urlToImage,\n  publishedAt,\n  content ) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: CREATE_TECH_REQUEST });\n    const {\n      userLogin: {userInfo}, \n    }  = getState()\n    \n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      },\n    };\n    console.log(\"userinfo action\",userInfo)\n    console.log(\"before\")\n    const { data } = await axios.post(\n      \"http://127.0.0.1:8000/api/technology/create/\",\n      {\n        'author':author,\n        'title':title,\n        'description':description,\n        'url': url,\n        'urlToImage':urlToImage,\n        'publishedAt':publishedAt,\n        'content':content,\n      },\n      config\n    );\n    console.log(\"after\")\n    dispatch({ type: CREATE_TECH_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: CREATE_TECH_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}