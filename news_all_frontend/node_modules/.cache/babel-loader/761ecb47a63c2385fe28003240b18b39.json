{"ast":null,"code":"var _jsxFileName = \"/home/cos/Desktop/Development Project/News_Ad_website/backend/news_all_frontend/src/admin-screen/TechCreateNewsApi.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { createTechs } from \"../actions/techActions\";\nimport \"../css_styles/TechCreate.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TechCreateNewsApi = () => {\n  _s();\n\n  const [author, setAuthor] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  const [urlToImage, setUrlToImage] = useState(\"\");\n  const [publishedAt, setPublishedAt] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [techs, setTechs] = useState([]);\n  const newsApiKey = \"d049a308e4634c8b8a28ce3b4b3059be\";\n  const dispatch = useDispatch();\n\n  const submitHandler = tech => {\n    dispatch(createTechs({\n      \"author\": tech.author,\n      \"title\": tech.title,\n      \"description\": tech.description,\n      \"url\": tech.url,\n      \"urlToImage\": tech.urlToImage,\n      \"publishedAt\": tech.publishedAt,\n      \"content\": tech.content\n    }));\n    console.log(\"clicked\", author);\n  }; //   FETCH THE DATA\n\n\n  const techNewsApi = () => async () => {\n    console.log(\"Fetching api\");\n    const {\n      data\n    } = await axios.get(`https://newsapi.org/v2/top-headlines?country=in&category=technology&apiKey=${newsApiKey}`);\n    const datas = JSON.stringify(data.articles[0].title);\n    console.log(\"datas\", data.articles);\n    console.log(\"techs1\", techs);\n    setTechs(data.articles);\n    console.log(\"techs2\", techs);\n    setInterval(() => {});\n    techs && techs.map(tech => {\n      return console.log(\"interval start\"), console.log(\"hi\", tech.author), setAuthor(tech.author), setTitle(tech.title), setDescription(tech.description), setUrl(tech.url), setUrlToImage(tech.urlToImage), setPublishedAt(tech.publishedAt), setContent(tech.content), console.log(\"interval ended\"), // submitHandler(),\n      console.log(\"inside map last line\"), dispatch(createTechs({\n        \"author\": \"tech.author\",\n        \"title\": tech.title,\n        \"description\": \"tech.description\",\n        \"url\": \"tech.url\",\n        \"urlToImage\": \"tech.urlToImage\",\n        \"publishedAt\": \"tech.publishedAt\",\n        \"content\": \"tech.content\"\n      })), console.log(\"dispatch finished\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"techcreate\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: techNewsApi(),\n        children: \"click\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: techs && techs.map(tech => /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: tech.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 45\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(TechCreateNewsApi, \"ggPIkqPzIXSrbSeUMSMtWfka6ns=\", false, function () {\n  return [useDispatch];\n});\n\n_c = TechCreateNewsApi;\nexport default TechCreateNewsApi;\n\nvar _c;\n\n$RefreshReg$(_c, \"TechCreateNewsApi\");","map":{"version":3,"sources":["/home/cos/Desktop/Development Project/News_Ad_website/backend/news_all_frontend/src/admin-screen/TechCreateNewsApi.js"],"names":["React","useState","useEffect","axios","useSelector","useDispatch","createTechs","TechCreateNewsApi","author","setAuthor","title","setTitle","description","setDescription","url","setUrl","urlToImage","setUrlToImage","publishedAt","setPublishedAt","content","setContent","techs","setTechs","newsApiKey","dispatch","submitHandler","tech","console","log","techNewsApi","data","get","datas","JSON","stringify","articles","setInterval","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { createTechs } from \"../actions/techActions\";\n\nimport \"../css_styles/TechCreate.css\";\n\nconst TechCreateNewsApi= () => {\n  const [author, setAuthor] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  const [urlToImage, setUrlToImage] = useState(\"\");\n  const [publishedAt, setPublishedAt] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  const [techs, setTechs] = useState([]);\n  const newsApiKey = \"d049a308e4634c8b8a28ce3b4b3059be\";\n  const dispatch = useDispatch();\n\n\n  const submitHandler = (tech) => {\n    dispatch(\n      createTechs({\n        \"author\":tech.author,\n        \"title\": tech.title,\n        \"description\":tech.description,\n        \"url\":tech.url,\n        \"urlToImage\":tech.urlToImage,\n        \"publishedAt\":tech.publishedAt,\n        \"content\":tech.content\n      })\n    )\n    console.log(\"clicked\", author);\n  };\n\n\n  //   FETCH THE DATA\n  const techNewsApi = () => async () => {\n    console.log(\"Fetching api\");\n\n    const { data } = await axios.get(\n      `https://newsapi.org/v2/top-headlines?country=in&category=technology&apiKey=${newsApiKey}`\n    );\n\n    const datas = JSON.stringify(data.articles[0].title)\n\n    console.log(\"datas\", data.articles);\n    console.log(\"techs1\", techs);\n    setTechs(data.articles);\n    console.log(\"techs2\", techs);\n\n    setInterval(() => {\n\n    },)\n\n    techs && techs.map((tech) => {\n      \n      return (\n          console.log(\"interval start\"),\n          console.log(\"hi\", tech.author),\n          setAuthor(tech.author),\n          setTitle(tech.title),\n          setDescription(tech.description),\n          setUrl(tech.url),\n          setUrlToImage(tech.urlToImage),\n          setPublishedAt(tech.publishedAt),\n          setContent(tech.content),\n          console.log(\"interval ended\"),\n\n          // submitHandler(),\n          \n          \n          console.log(\"inside map last line\"),\n          dispatch(createTechs({\n              \"author\":\"tech.author\",\n              \"title\": tech.title,\n              \"description\":\"tech.description\",\n              \"url\":\"tech.url\",\n              \"urlToImage\":\"tech.urlToImage\",\n              \"publishedAt\":\"tech.publishedAt\",\n              \"content\":\"tech.content\"\n            })\n          ),\n          console.log(\"dispatch finished\")\n          \n          )\n        });\n    };\n\n  \n    \n\n\n\n\n  return (\n    <>\n      <div className=\"techcreate\">\n        <button onClick={techNewsApi()}>click</button>\n        <div >{techs && techs.map((tech) => <h2>{tech.title}</h2>)}</div>\n      </div>\n    </>\n  );\n};\n\nexport default TechCreateNewsApi;\n"]},"metadata":{},"sourceType":"module"}