{"ast":null,"code":"import { ADVERTISE_LIST_REQUEST, ADVERTISE_LIST_SUCCESS, ADVERTISE_LIST_FAIL, ADVERTISE_DETAIL_REQUEST, ADVERTISE_DETAIL_SUCCESS, ADVERTISE_DETAIL_FAIL, ADVERTISE_CREATE_REQUEST, ADVERTISE_CREATE_SUCCESS, ADVERTISE_CREATE_FAIL } from '../constants/productivityConstants';\nimport axios from 'axios'; // ADVERTISEMENT PORTION\n\nexport const advertiseList = () => async dispatch => {\n  try {\n    dispatch({\n      type: ADVERTISE_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"http://127.0.0.1:8000/api/advertisement/list/\");\n    dispatch({\n      type: ADVERTISE_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ADVERTISE_LIST_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const advertiseDetailAction = id => async dispatch => {\n  try {\n    dispatch({\n      type: ADVERTISE_DETAIL_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`http://127.0.0.1:8000/api/advertisement/list/${id}`);\n    dispatch({\n      type: ADVERTISE_DETAIL_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ADVERTISE_DETAIL_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const advertiseCreateAction = () => async dispatch => {\n  try {\n    dispatch({\n      type: ADVERTISE_CREATE_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(`http://127.0.0.1:8000/api/advertisement/create/`);\n    dispatch({\n      type: ADVERTISE_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ADVERTISE_DETAIL_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/cos/Desktop/Development Project/News_Ad_website/backend/news_all/news_all_frontend/src/actions/advertiseActions.js"],"names":["ADVERTISE_LIST_REQUEST","ADVERTISE_LIST_SUCCESS","ADVERTISE_LIST_FAIL","ADVERTISE_DETAIL_REQUEST","ADVERTISE_DETAIL_SUCCESS","ADVERTISE_DETAIL_FAIL","ADVERTISE_CREATE_REQUEST","ADVERTISE_CREATE_SUCCESS","ADVERTISE_CREATE_FAIL","axios","advertiseList","dispatch","type","data","get","payload","error","response","detail","message","advertiseDetailAction","id","advertiseCreateAction","post"],"mappings":"AAAA,SACIA,sBADJ,EAEIC,sBAFJ,EAGIC,mBAHJ,EAKIC,wBALJ,EAMIC,wBANJ,EAOIC,qBAPJ,EASIC,wBATJ,EAUIC,wBAVJ,EAWIC,qBAXJ,QAYO,oCAZP;AAcA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACnD,MAAG;AACCA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEZ;AAAR,KAAD,CAAR;AACA,UAAM;AAAEa,MAAAA;AAAF,QAAW,MAAMJ,KAAK,CAACK,GAAN,CACnB,+CADmB,CAAvB;AAGAH,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEX,sBADD;AAELc,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAIH,GATD,CASE,OAAOG,KAAP,EAAc;AACZL,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEV,mBADD;AAELa,MAAAA,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,MAAtC,GACIF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,MADxB,GAEIF,KAAK,CAACG;AALP,KAAD,CAAR;AAOH;AACJ,CAnBM;AAuBP,OAAO,MAAMC,qBAAqB,GAAIC,EAAD,IAAQ,MAAOV,QAAP,IAAoB;AAC7D,MAAG;AACCA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET;AAAR,KAAD,CAAR;AACA,UAAM;AAAEU,MAAAA;AAAF,QAAW,MAAMJ,KAAK,CAACK,GAAN,CAClB,gDAA+CO,EAAG,EADhC,CAAvB;AAGAV,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAER,wBADD;AAELW,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAIH,GATD,CASE,OAAOG,KAAP,EAAc;AACZL,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEP,qBADD;AAELU,MAAAA,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,MAAtC,GACIF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,MADxB,GAEIF,KAAK,CAACG;AALP,KAAD,CAAR;AAOH;AACJ,CAnBM;AAsBP,OAAO,MAAMG,qBAAqB,GAAG,MAAM,MAAOX,QAAP,IAAoB;AAC3D,MAAG;AACCA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN;AAAR,KAAD,CAAR;AACA,UAAM;AAAEO,MAAAA;AAAF,QAAW,MAAMJ,KAAK,CAACc,IAAN,CAClB,iDADkB,CAAvB;AAGAZ,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEL,wBADD;AAELQ,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAIH,GATD,CASE,OAAOG,KAAP,EAAc;AACZL,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEP,qBADD;AAELU,MAAAA,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,MAAtC,GACIF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,MADxB,GAEIF,KAAK,CAACG;AALP,KAAD,CAAR;AAOH;AACJ,CAnBM","sourcesContent":["import {\n    ADVERTISE_LIST_REQUEST,\n    ADVERTISE_LIST_SUCCESS,\n    ADVERTISE_LIST_FAIL,\n\n    ADVERTISE_DETAIL_REQUEST,\n    ADVERTISE_DETAIL_SUCCESS,\n    ADVERTISE_DETAIL_FAIL,\n\n    ADVERTISE_CREATE_REQUEST,\n    ADVERTISE_CREATE_SUCCESS,\n    ADVERTISE_CREATE_FAIL,\n} from '../constants/productivityConstants'\n\nimport axios from 'axios'\n\n// ADVERTISEMENT PORTION\n\nexport const advertiseList = () => async (dispatch) => {\n    try{\n        dispatch({ type: ADVERTISE_LIST_REQUEST });\n        const { data } = await axios.get(\n            \"http://127.0.0.1:8000/api/advertisement/list/\"\n        );\n        dispatch({\n            type: ADVERTISE_LIST_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        dispatch({\n            type: ADVERTISE_LIST_FAIL,\n            payload:\n              error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n    })\n    }\n}\n\n\n\nexport const advertiseDetailAction = (id) => async (dispatch) => {\n    try{\n        dispatch({ type: ADVERTISE_DETAIL_REQUEST });\n        const { data } = await axios.get(\n            `http://127.0.0.1:8000/api/advertisement/list/${id}`\n        );\n        dispatch({\n            type: ADVERTISE_DETAIL_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        dispatch({\n            type: ADVERTISE_DETAIL_FAIL,\n            payload:\n              error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n    })\n    }\n}\n\n\nexport const advertiseCreateAction = () => async (dispatch) => {\n    try{\n        dispatch({ type: ADVERTISE_CREATE_REQUEST });\n        const { data } = await axios.post(\n            `http://127.0.0.1:8000/api/advertisement/create/`\n        );\n        dispatch({\n            type: ADVERTISE_CREATE_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        dispatch({\n            type: ADVERTISE_DETAIL_FAIL,\n            payload:\n              error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n    })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}