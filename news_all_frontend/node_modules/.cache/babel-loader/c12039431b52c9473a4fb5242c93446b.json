{"ast":null,"code":"import { ADVERTISE_LIST_REQUEST, ADVERTISE_LIST_SUCCESS, ADVERTISE_LIST_FAIL, ADVERTISE_DETAIL_REQUEST, ADVERTISE_DETAIL_SUCCESS, ADVERTISE_DETAIL_FAIL, ADVERTISE_CREATE_REQUEST, ADVERTISE_CREATE_SUCCESS, ADVERTISE_CREATE_FAIL, ADVERTISE_UPDATE_REQUEST, ADVERTISE_UPDATE_SUCCESS, ADVERTISE_UPDATE_FAIL, ADVERTISE_UPDATE_RESET, ADVERTISE_DELETE_REQUEST, ADVERTISE_DELETE_SUCCESS, ADVERTISE_DELETE_FAIL, ADVERTISE_DELETE_RESET // CELEBRITY PART\n, CELEBRITY_LIST_REQUEST, CELEBRITY_LIST_SUCCESS, CELEBRITY_LIST_FAIL, CELEBRITY_DETAIL_REQUEST, CELEBRITY_DETAIL_SUCCESS, CELEBRITY_DETAIL_FAIL // EVENT PORTION\n, EVENT_LIST_REQUEST, EVENT_LIST_SUCCESS, EVENT_LIST_FAIL, EVENT_DETAIL_REQUEST, EVENT_DETAIL_SUCCESS, EVENT_DETAIL_FAIL } from '../constants/productivityConstants';\nimport axios from 'axios'; // ADVERTISEMENT PORTION\n\nexport const advertiseListAction = () => async dispatch => {\n  try {\n    dispatch({\n      type: ADVERTISE_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"http://127.0.0.1:8000/api/advertisement/list/\");\n    dispatch({\n      type: ADVERTISE_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ADVERTISE_LIST_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const advertiseDetailAction = id => async dispatch => {\n  try {\n    dispatch({\n      type: ADVERTISE_DETAIL_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`http://127.0.0.1:8000/api/advertisement/list/${id}`);\n    dispatch({\n      type: ADVERTISE_DETAIL_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ADVERTISE_DETAIL_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const advertiseCreateAction = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ADVERTISE_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    console.log(\"userinfo\", userInfo.token);\n    const {\n      data\n    } = await axios.post(`http://127.0.0.1:8000/api/advertisement/create/`, {}, config);\n    dispatch({\n      type: ADVERTISE_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ADVERTISE_CREATE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const advertiseUpdateAction = advertise => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ADVERTISE_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    console.log(\"userinfo\", userInfo.token);\n    const {\n      data\n    } = await axios.put(`http://127.0.0.1:8000/api/advertisement/update/${advertise.id}/`, advertise, config);\n    dispatch({\n      type: ADVERTISE_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ADVERTISE_UPDATE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const advertiseDeleteAction = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ADVERTISE_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    console.log(\"userinfo\", userInfo.token);\n    const {\n      data\n    } = await axios.delete(`http://127.0.0.1:8000/api/advertisement/delete/${id}/`, config);\n    dispatch({\n      type: ADVERTISE_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ADVERTISE_DELETE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n}; // CELEBRITY COMPONENT\n\nexport const celebrityListAction = () => async dispatch => {\n  try {\n    dispatch({\n      type: CELEBRITY_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"http://127.0.0.1:8000/api/celebrities/list/\");\n    dispatch({\n      type: CELEBRITY_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CELEBRITY_LIST_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const celebrityDetailAction = id => async dispatch => {\n  try {\n    dispatch({\n      type: CELEBRITY_DETAIL_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`http://127.0.0.1:8000/api/celebrities/list/${id}`);\n    dispatch({\n      type: CELEBRITY_DETAIL_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CELEBRITY_DETAIL_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n}; // EVENT PORTION\n\nexport const eventListAction = () => async dispatch => {\n  try {\n    dispatch({\n      type: EVENT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"http://127.0.0.1:8000/api/event/list/\");\n    dispatch({\n      type: EVENT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: EVENT_LIST_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const eventDetailAction = id => async dispatch => {\n  try {\n    dispatch({\n      type: EVENT_DETAIL_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`http://127.0.0.1:8000/api/event/list/${id}`);\n    dispatch({\n      type: EVENT_DETAIL_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: EVENT_DETAIL_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/cos/Desktop/Development Project/News_Ad_website/backend/news_all/news_all_frontend/src/actions/advertiseActions.js"],"names":["ADVERTISE_LIST_REQUEST","ADVERTISE_LIST_SUCCESS","ADVERTISE_LIST_FAIL","ADVERTISE_DETAIL_REQUEST","ADVERTISE_DETAIL_SUCCESS","ADVERTISE_DETAIL_FAIL","ADVERTISE_CREATE_REQUEST","ADVERTISE_CREATE_SUCCESS","ADVERTISE_CREATE_FAIL","ADVERTISE_UPDATE_REQUEST","ADVERTISE_UPDATE_SUCCESS","ADVERTISE_UPDATE_FAIL","ADVERTISE_UPDATE_RESET","ADVERTISE_DELETE_REQUEST","ADVERTISE_DELETE_SUCCESS","ADVERTISE_DELETE_FAIL","ADVERTISE_DELETE_RESET","CELEBRITY_LIST_REQUEST","CELEBRITY_LIST_SUCCESS","CELEBRITY_LIST_FAIL","CELEBRITY_DETAIL_REQUEST","CELEBRITY_DETAIL_SUCCESS","CELEBRITY_DETAIL_FAIL","EVENT_LIST_REQUEST","EVENT_LIST_SUCCESS","EVENT_LIST_FAIL","EVENT_DETAIL_REQUEST","EVENT_DETAIL_SUCCESS","EVENT_DETAIL_FAIL","axios","advertiseListAction","dispatch","type","data","get","payload","error","response","detail","message","advertiseDetailAction","id","advertiseCreateAction","getState","userLogin","userInfo","config","headers","Authorization","token","console","log","post","advertiseUpdateAction","advertise","put","advertiseDeleteAction","delete","celebrityListAction","celebrityDetailAction","eventListAction","eventDetailAction"],"mappings":"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","sourcesContent":["import {\n    ADVERTISE_LIST_REQUEST,\n    ADVERTISE_LIST_SUCCESS,\n    ADVERTISE_LIST_FAIL,\n\n    ADVERTISE_DETAIL_REQUEST,\n    ADVERTISE_DETAIL_SUCCESS,\n    ADVERTISE_DETAIL_FAIL,\n\n    ADVERTISE_CREATE_REQUEST,\n    ADVERTISE_CREATE_SUCCESS,\n    ADVERTISE_CREATE_FAIL,\n\n\n    ADVERTISE_UPDATE_REQUEST,\n    ADVERTISE_UPDATE_SUCCESS,\n    ADVERTISE_UPDATE_FAIL,\n    ADVERTISE_UPDATE_RESET,\n\n    ADVERTISE_DELETE_REQUEST,\n    ADVERTISE_DELETE_SUCCESS,\n    ADVERTISE_DELETE_FAIL,\n    ADVERTISE_DELETE_RESET,\n\n   // CELEBRITY PART\n   CELEBRITY_LIST_REQUEST,\n   CELEBRITY_LIST_SUCCESS,\n   CELEBRITY_LIST_FAIL,\n\n   CELEBRITY_DETAIL_REQUEST,\n   CELEBRITY_DETAIL_SUCCESS,\n   CELEBRITY_DETAIL_FAIL,\n\n   // EVENT PORTION\n\n   EVENT_LIST_REQUEST,\n   EVENT_LIST_SUCCESS,\n   EVENT_LIST_FAIL,\n\n   EVENT_DETAIL_REQUEST,\n   EVENT_DETAIL_SUCCESS,\n   EVENT_DETAIL_FAIL,\n\n\n} from '../constants/productivityConstants'\n\nimport axios from 'axios'\n\n// ADVERTISEMENT PORTION\n\nexport const advertiseListAction = () => async (dispatch) => {\n    try{\n        dispatch({ type: ADVERTISE_LIST_REQUEST });\n        const { data } = await axios.get(\n            \"http://127.0.0.1:8000/api/advertisement/list/\"\n        );\n        dispatch({\n            type: ADVERTISE_LIST_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        dispatch({\n            type: ADVERTISE_LIST_FAIL,\n            payload:\n              error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n    })\n    }\n}\n\n\n\nexport const advertiseDetailAction = (id) => async (dispatch) => {\n    try{\n        dispatch({ type: ADVERTISE_DETAIL_REQUEST });\n        const { data } = await axios.get(\n            `http://127.0.0.1:8000/api/advertisement/list/${id}`\n        );\n        dispatch({\n            type: ADVERTISE_DETAIL_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        dispatch({\n            type: ADVERTISE_DETAIL_FAIL,\n            payload:\n              error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n    })\n    }\n}\n\n\nexport const advertiseCreateAction = () => async (dispatch, getState) => {\n    try{\n        dispatch({ type: ADVERTISE_CREATE_REQUEST });\n        \n        const {\n            userLogin: { userInfo },\n        } = getState()\n        \n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        console.log(\"userinfo\", userInfo.token)\n\n\n        const { data } = await axios.post(\n            `http://127.0.0.1:8000/api/advertisement/create/`,\n            {},\n            config\n        );\n\n\n        dispatch({\n            type: ADVERTISE_CREATE_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        dispatch({\n            type: ADVERTISE_CREATE_FAIL,\n            payload:\n              error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n    })\n    }\n}\n\nexport const advertiseUpdateAction = (advertise) => async (dispatch, getState) => {\n    try{\n        dispatch({ type: ADVERTISE_UPDATE_REQUEST });\n        \n        const {\n            userLogin: { userInfo },\n        } = getState()\n        \n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        console.log(\"userinfo\", userInfo.token)\n\n\n        const { data } = await axios.put(\n            `http://127.0.0.1:8000/api/advertisement/update/${advertise.id}/`,\n            advertise,\n            config\n        );\n\n\n        dispatch({\n            type: ADVERTISE_UPDATE_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        dispatch({\n            type: ADVERTISE_UPDATE_FAIL,\n            payload:\n              error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n    })\n    }\n}\n\n\n\n\nexport const advertiseDeleteAction = (id) => async (dispatch, getState) => {\n    try{\n        dispatch({ type: ADVERTISE_DELETE_REQUEST });\n        \n        const {\n            userLogin: { userInfo },\n        } = getState()\n        \n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        console.log(\"userinfo\", userInfo.token)\n\n\n        const { data } = await axios.delete(\n            `http://127.0.0.1:8000/api/advertisement/delete/${id}/`,\n            \n            config\n        );\n\n\n        dispatch({\n            type: ADVERTISE_DELETE_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        dispatch({\n            type: ADVERTISE_DELETE_FAIL,\n            payload:\n              error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n    })\n    }\n}\n\n\n// CELEBRITY COMPONENT\n\nexport const celebrityListAction = () => async (dispatch) => {\n    try{\n        dispatch({ type: CELEBRITY_LIST_REQUEST });\n        const { data } = await axios.get(\n            \"http://127.0.0.1:8000/api/celebrities/list/\"\n        );\n        dispatch({\n            type: CELEBRITY_LIST_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        dispatch({\n            type: CELEBRITY_LIST_FAIL,\n            payload:\n              error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n    })\n    }\n}\n\nexport const celebrityDetailAction = (id) => async (dispatch) => {\n    try{\n        dispatch({ type: CELEBRITY_DETAIL_REQUEST });\n        const { data } = await axios.get(\n            `http://127.0.0.1:8000/api/celebrities/list/${id}`\n        );\n        dispatch({\n            type: CELEBRITY_DETAIL_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        dispatch({\n            type: CELEBRITY_DETAIL_FAIL,\n            payload:\n              error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n    })\n    }\n}\n\n\n\n// EVENT PORTION\n\nexport const eventListAction = () => async (dispatch) => {\n    try{\n        dispatch({ type: EVENT_LIST_REQUEST });\n        const { data } = await axios.get(\n            \"http://127.0.0.1:8000/api/event/list/\"\n        );\n        dispatch({\n            type: EVENT_LIST_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        dispatch({\n            type: EVENT_LIST_FAIL,\n            payload:\n              error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n    })\n    }\n}\n\nexport const eventDetailAction = (id) => async (dispatch) => {\n    try{\n        dispatch({ type: EVENT_DETAIL_REQUEST });\n        const { data } = await axios.get(\n            `http://127.0.0.1:8000/api/event/list/${id}`\n        );\n        dispatch({\n            type: EVENT_DETAIL_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        dispatch({\n            type: EVENT_DETAIL_FAIL,\n            payload:\n              error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n    })\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}