{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL } from \"../constants/userConstants\";\nimport axios from 'axios';\nexport const userLoginActions = (username, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"http://127.0.0.1:8000/api/users/login/\", {\n      username,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userLogin', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const userRegisterActions = (username, email, password, password2) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"http://127.0.0.1:8000/api/users/user-register/\", {\n      'username': username,\n      'email': email,\n      'password': password,\n      'password2': password2\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    }); // dispatch({\n    //     type: USER_LOGIN_SUCCESS,\n    //     payload: data\n    // })\n    // localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const userLogoutActions = () => async dispatch => {\n  localStorage.removeItem('userLogin');\n  dispatch({\n    type: USER_LOGOUT\n  }); // dispatch({ type: USER_DETAILS_RESET })\n  // dispatch({ type: ORDER_LIST_MY_RESET })\n  // dispatch({ type: USER_LIST_RESET })\n};\nexport const userListActions = () => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`http://127.0.0.1:8000/api/hotels/create/`, {}, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    }); // dispatch({\n    //     type: USER_LOGIN_SUCCESS,\n    //     payload: data\n    // })\n    // localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/cos/Desktop/Development Project/News_Ad_website/backend/news_all/news_all_frontend/src/actions/userActions.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","axios","userLoginActions","username","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","detail","message","userRegisterActions","email","password2","userLogoutActions","removeItem","userListActions","userLogin","userInfo","getState","Authorization","token"],"mappings":"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","sourcesContent":["import {\n\n\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    \n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n\n\n  } from \"../constants/userConstants\";\n  \nimport axios from 'axios'  \n\nexport const userLoginActions = (username, password) => async (dispatch) => {\n    try{\n        dispatch({type: USER_LOGIN_REQUEST});\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n        const {data} = await axios.post(\n            \"http://127.0.0.1:8000/api/users/login/\",\n            {username, password},\n            config\n        )\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n        localStorage.setItem('userLogin', JSON.stringify(data))\n\n    }  catch (error) {\n        dispatch({\n          type: USER_LOGIN_FAIL,\n          payload:\n            error.response && error.response.data.detail\n              ? error.response.data.detail\n              : error.message,\n        });\n    }\n}\n\nexport const userRegisterActions = (username, email, password, password2) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n        const {data} = await axios.post(\n            \"http://127.0.0.1:8000/api/users/user-register/\",\n            {'username':username, 'email':email, 'password':password, 'password2':password2},\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        // dispatch({\n        //     type: USER_LOGIN_SUCCESS,\n        //     payload: data\n        // })\n\n        // localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const userLogoutActions = () => async (dispatch) =>{\n    localStorage.removeItem('userLogin')\n    dispatch({ type: USER_LOGOUT })\n    // dispatch({ type: USER_DETAILS_RESET })\n    // dispatch({ type: ORDER_LIST_MY_RESET })\n    // dispatch({ type: USER_LIST_RESET })\n}\n\nexport const userListActions = () => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n        \n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n\n        const { data } = await axios.post(\n            `http://127.0.0.1:8000/api/hotels/create/`,\n            {},\n            config\n        );\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        // dispatch({\n        //     type: USER_LOGIN_SUCCESS,\n        //     payload: data\n        // })\n\n        // localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}