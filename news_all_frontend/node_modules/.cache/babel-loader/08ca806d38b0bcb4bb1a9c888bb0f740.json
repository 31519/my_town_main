{"ast":null,"code":"import { TECH_LIST_REQUEST, TECH_LIST_SUCCESS, TECH_LIST_FAIL } from \"../constants/tech\";\nimport axios from 'axios';\nexport const listTechs = () => async dispatch => {\n  try {\n    dispatch({\n      type: TECH_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('http://127.0.0.1:8000/api/technology/list/');\n    dispatch({\n      type: TECH_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: TECH_LIST_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/cos/Desktop/Development Project/News_Ad_website/backend/news_all_frontend/src/actions/techActions.js"],"names":["TECH_LIST_REQUEST","TECH_LIST_SUCCESS","TECH_LIST_FAIL","axios","listTechs","dispatch","type","data","get","payload","error","response","detail","message"],"mappings":"AAAA,SACEA,iBADF,EAEEC,iBAFF,EAGEC,cAHF,QAIO,mBAJP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAE,MAAM,MAAOC,QAAP,IAAqB;AAC/C,MAAI;AACAA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN;AAAR,KAAD,CAAR;AACA,UAAM;AAACO,MAAAA;AAAD,QAAU,MAAMJ,KAAK,CAACK,GAAN,CAAU,4CAAV,CAAtB;AAEAH,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEL,iBADD;AAELQ,MAAAA,OAAO,EAACF;AAFH,KAAD,CAAR;AAKH,GATD,CASE,OAAOG,KAAP,EAAc;AACZL,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEJ,cADD;AAELO,MAAAA,OAAO,EAAEC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,MAAtC,GACHF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,MADjB,GAEJF,KAAK,CAACG;AAJN,KAAD,CAAR;AAMH;AACJ,CAlBM","sourcesContent":["import {\n  TECH_LIST_REQUEST,\n  TECH_LIST_SUCCESS,\n  TECH_LIST_FAIL,\n} from \"../constants/tech\";\n\nimport axios from 'axios'\n\nexport const listTechs =() => async (dispatch) =>  {\n    try {\n        dispatch({ type: TECH_LIST_REQUEST})\n        const {data } = await axios.get('http://127.0.0.1:8000/api/technology/list/')\n\n        dispatch({\n            type: TECH_LIST_SUCCESS,\n            payload:data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: TECH_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                :error.message,\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}