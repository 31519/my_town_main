{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_DETAIL_REQUEST, USER_DETAIL_SUCCESS, USER_DETAIL_FAIL, USER_DETAIL_RESET, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_RESET, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_DELETE_RESET // PROFILE PORTIONS\n, PROFILE_LIST_REQUEST, PROFILE_LIST_SUCCESS, PROFILE_LIST_FAIL, PROFILE_DETAIL_REQUEST, PROFILE_DETAIL_SUCCESS, PROFILE_DETAIL_FAIL, PROFILE_DETAIL_RESET, PROFILE_UPDATE_REQUEST, PROFILE_UPDATE_SUCCESS, PROFILE_UPDATE_FAIL, PROFILE_UPDATE_RESET } from \"../constants/userConstants\";\nimport axios from 'axios';\nexport const userLoginActions = (username, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"http://127.0.0.1:8000/api/users/login/\", {\n      username,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userLogin', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const userRegisterActions = (username, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"http://127.0.0.1:8000/api/users/user-register/\", {\n      'username': username,\n      'email': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    }); // dispatch({\n    //     type: USER_LOGIN_SUCCESS,\n    //     payload: data\n    // })\n    // localStorage.setItem('userLogin', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const userLogoutActions = () => async dispatch => {\n  localStorage.removeItem('userLogin');\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: PROFILE_DETAIL_RESET\n  }); // dispatch({ type: ORDER_LIST_MY_RESET })\n  // dispatch({ type: USER_LIST_RESET })\n};\nexport const userListActions = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    console.log(\"here user\");\n    const {\n      data\n    } = await axios.get(`http://127.0.0.1:8000/api/users/users-list/`, config);\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const userDetailActions = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAIL_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`http://127.0.0.1:8000/api/users/users-detail/${id}/`, config);\n    dispatch({\n      type: USER_DETAIL_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAIL_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const userDeleteActions = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.delete(`http://127.0.0.1:8000/api/users/users-delete/${id}/`, config);\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const userUpdateActions = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`http://127.0.0.1:8000/api/users/users-update/${user.id}/`, user, config);\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n}; // PROFILE PORTIONS\n\nexport const profileListActions = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PROFILE_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`http://127.0.0.1:8000/api/users/profile-list/`, config);\n    dispatch({\n      type: PROFILE_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PROFILE_LIST_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const profileDetailActions = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PROFILE_DETAIL_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`http://127.0.0.1:8000/api/users/profile-detail/`, config);\n    dispatch({\n      type: PROFILE_DETAIL_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PROFILE_DETAIL_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const profileUpdateActions = profile => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PROFILE_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`http://127.0.0.1:8000/api/users/profile-update/${profile.id}/`, profile, config);\n    dispatch({\n      type: PROFILE_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PROFILE_UPDATE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/cos/Desktop/Development Project/News_Ad_website/backend/news_all/news_all_frontend/src/actions/userActions.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_DETAIL_REQUEST","USER_DETAIL_SUCCESS","USER_DETAIL_FAIL","USER_DETAIL_RESET","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_DELETE_RESET","PROFILE_LIST_REQUEST","PROFILE_LIST_SUCCESS","PROFILE_LIST_FAIL","PROFILE_DETAIL_REQUEST","PROFILE_DETAIL_SUCCESS","PROFILE_DETAIL_FAIL","PROFILE_DETAIL_RESET","PROFILE_UPDATE_REQUEST","PROFILE_UPDATE_SUCCESS","PROFILE_UPDATE_FAIL","PROFILE_UPDATE_RESET","axios","userLoginActions","username","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","detail","message","userRegisterActions","email","userLogoutActions","removeItem","userListActions","getState","userLogin","userInfo","Authorization","token","console","log","get","userDetailActions","id","userDeleteActions","delete","userUpdateActions","user","put","profileListActions","profileDetailActions","profileUpdateActions","profile"],"mappings":"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","sourcesContent":["import {\n\n\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    \n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n\n\n    USER_DETAIL_REQUEST,\n    USER_DETAIL_SUCCESS,\n    USER_DETAIL_FAIL,\n    USER_DETAIL_RESET,\n  \n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_UPDATE_RESET,\n  \n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n    USER_DELETE_RESET,\n\n    // PROFILE PORTIONS\n    \n    PROFILE_LIST_REQUEST,\n    PROFILE_LIST_SUCCESS,\n    PROFILE_LIST_FAIL,\n\n    PROFILE_DETAIL_REQUEST,\n    PROFILE_DETAIL_SUCCESS,\n    PROFILE_DETAIL_FAIL,\n    PROFILE_DETAIL_RESET,\n\n    PROFILE_UPDATE_REQUEST,\n    PROFILE_UPDATE_SUCCESS,\n    PROFILE_UPDATE_FAIL,\n    PROFILE_UPDATE_RESET,\n\n\n  } from \"../constants/userConstants\";\n  \nimport axios from 'axios'  \n\nexport const userLoginActions = (username, password) => async (dispatch) => {\n    try{\n        dispatch({type: USER_LOGIN_REQUEST});\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n        const {data} = await axios.post(\n            \"http://127.0.0.1:8000/api/users/login/\",\n            {username, password},\n            config\n        )\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n        localStorage.setItem('userLogin', JSON.stringify(data))\n\n    }  catch (error) {\n        dispatch({\n          type: USER_LOGIN_FAIL,\n          payload:\n            error.response && error.response.data.detail\n              ? error.response.data.detail\n              : error.message,\n        });\n    }\n}\nexport const userRegisterActions = (username, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n        const {data} = await axios.post(\n            \"http://127.0.0.1:8000/api/users/user-register/\",\n            {'username':username, 'email':email, 'password':password},\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        // dispatch({\n        //     type: USER_LOGIN_SUCCESS,\n        //     payload: data\n        // })\n\n        // localStorage.setItem('userLogin', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const userLogoutActions = () => async (dispatch) =>{\n    localStorage.removeItem('userLogin')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: PROFILE_DETAIL_RESET})\n    // dispatch({ type: ORDER_LIST_MY_RESET })\n    // dispatch({ type: USER_LIST_RESET })\n}\n\nexport const userListActions = () => async ( dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n        \n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        console.log(\"here user\")\n        const { data } = await axios.get(\n            `http://127.0.0.1:8000/api/users/users-list/`,\n            config\n        );\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const userDetailActions = (id) => async ( dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAIL_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n        \n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n       \n        const { data } = await axios.get(\n            `http://127.0.0.1:8000/api/users/users-detail/${id}/`,\n            config\n        );\n\n        dispatch({\n            type: USER_DETAIL_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAIL_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const userDeleteActions = (id) => async ( dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n        \n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n       \n        const { data } = await axios.delete(\n            `http://127.0.0.1:8000/api/users/users-delete/${id}/`,\n            config\n        );\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const userUpdateActions = (user) => async ( dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n        \n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n       \n        const { data } = await axios.put(\n            `http://127.0.0.1:8000/api/users/users-update/${user.id}/`,\n            user,\n            config\n        );\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n// PROFILE PORTIONS\n\n\n\nexport const profileListActions = () => async ( dispatch, getState) => {\n    try {\n        dispatch({\n            type: PROFILE_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n        \n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `http://127.0.0.1:8000/api/users/profile-list/`,\n            config\n        );\n\n        dispatch({\n            type: PROFILE_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PROFILE_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const profileDetailActions = () => async ( dispatch, getState) => {\n    try {\n        dispatch({\n            type: PROFILE_DETAIL_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n        \n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n       \n        const { data } = await axios.get(\n            `http://127.0.0.1:8000/api/users/profile-detail/`,\n            config\n        );\n\n        dispatch({\n            type: PROFILE_DETAIL_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PROFILE_DETAIL_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const profileUpdateActions = (profile) => async ( dispatch, getState) => {\n    try {\n        dispatch({\n            type: PROFILE_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n        \n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n       \n        const { data } = await axios.put(\n            `http://127.0.0.1:8000/api/users/profile-update/${profile.id}/`,\n            profile,\n            config\n        );\n\n        dispatch({\n            type: PROFILE_UPDATE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PROFILE_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}