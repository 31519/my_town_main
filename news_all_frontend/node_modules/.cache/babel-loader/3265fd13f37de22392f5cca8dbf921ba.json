{"ast":null,"code":"import { TECH_LIST_REQUEST, TECH_LIST_SUCCESS, TECH_LIST_FAIL, CREATE_TECH_REQUEST, CREATE_TECH_SUCCESS, CREATE_TECH_FAIL } from \"../constants/techConstants\";\nimport axios from \"axios\";\nexport const listTechs = () => async dispatch => {\n  try {\n    dispatch({\n      type: TECH_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"http://127.0.0.1:8000/api/technology/list/\");\n    dispatch({\n      type: TECH_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: TECH_LIST_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const createTechs = techs => async (dispatch, getState) => {\n  try {\n    console.log(\"hi\");\n    dispatch({\n      type: CREATE_TECH_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    console.log(\"userinfo action\", userInfo);\n    console.log(\"before\");\n    const {\n      data\n    } = await axios.post(\"http://127.0.0.1:8000/api/technology/create/\", techs, // {\n    //   'author':author,\n    //   'title':title,\n    //   'descriptiond':description,\n    //   'url': url,\n    //   'urlToImage':urlToImage,\n    //   'publishedAt':publishedAt,\n    //   'content':content,\n    // },\n    config);\n    console.log(\"after\");\n    dispatch({\n      type: CREATE_TECH_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CREATE_TECH_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/cos/Desktop/Development Project/News_Ad_website/backend/news_all_frontend/src/actions/techActions.js"],"names":["TECH_LIST_REQUEST","TECH_LIST_SUCCESS","TECH_LIST_FAIL","CREATE_TECH_REQUEST","CREATE_TECH_SUCCESS","CREATE_TECH_FAIL","axios","listTechs","dispatch","type","data","get","payload","error","response","detail","message","createTechs","techs","getState","console","log","userLogin","userInfo","config","headers","Authorization","token","post"],"mappings":"AAAA,SACEA,iBADF,EAEEC,iBAFF,EAGEC,cAHF,EAKEC,mBALF,EAMEC,mBANF,EAOEC,gBAPF,QAQO,4BARP;AAUA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACjD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET;AAAR,KAAD,CAAR;AACA,UAAM;AAAEU,MAAAA;AAAF,QAAW,MAAMJ,KAAK,CAACK,GAAN,CACrB,4CADqB,CAAvB;AAIAH,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAER,iBADC;AAEPW,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GAVD,CAUE,OAAOG,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEP,cADC;AAEPU,MAAAA,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,MAAtC,GACIF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,MADxB,GAEIF,KAAK,CAACG;AALL,KAAD,CAAR;AAOD;AACF,CApBM;AAsBP,OAAO,MAAMC,WAAW,GAAGC,KAAD,IAAY,OAAOV,QAAP,EAAiBW,QAAjB,KAA8B;AAClE,MAAI;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAb,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN;AAAR,KAAD,CAAR;AACA,UAAM;AACJmB,MAAAA,SAAS,EAAE;AAACC,QAAAA;AAAD;AADP,QAEDJ,QAAQ,EAFb;AAIA,UAAMK,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAFjC;AADI,KAAf;AAMAP,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BE,QAA9B;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAEA,UAAM;AAAEX,MAAAA;AAAF,QAAW,MAAMJ,KAAK,CAACsB,IAAN,CACrB,8CADqB,EAErBV,KAFqB,EAGrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAM,IAAAA,MAZqB,CAAvB;AAcAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAb,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,mBAAR;AAA6BQ,MAAAA,OAAO,EAAEF;AAAtC,KAAD,CAAR;AACD,GAhCD,CAgCE,OAAOG,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,gBADC;AAEPO,MAAAA,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,MAAtC,GACIF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,MADxB,GAEIF,KAAK,CAACG;AALL,KAAD,CAAR;AAOD;AACF,CA1CM","sourcesContent":["import {\n  TECH_LIST_REQUEST,\n  TECH_LIST_SUCCESS,\n  TECH_LIST_FAIL,\n  \n  CREATE_TECH_REQUEST,\n  CREATE_TECH_SUCCESS,\n  CREATE_TECH_FAIL,\n} from \"../constants/techConstants\";\n\nimport axios from \"axios\";\n\nexport const listTechs = () => async (dispatch) => {\n  try {\n    dispatch({ type: TECH_LIST_REQUEST });\n    const { data } = await axios.get(\n      \"http://127.0.0.1:8000/api/technology/list/\"\n    );\n\n    dispatch({\n      type: TECH_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: TECH_LIST_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const createTechs= (techs ) => async (dispatch, getState) => {\n  try {\n    console.log(\"hi\")\n    dispatch({ type: CREATE_TECH_REQUEST });\n    const {\n      userLogin: {userInfo}, \n    }  = getState()\n    \n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      },\n    };\n    console.log(\"userinfo action\",userInfo)\n    console.log(\"before\")\n    \n    const { data } = await axios.post(\n      \"http://127.0.0.1:8000/api/technology/create/\",\n      techs,\n      // {\n      //   'author':author,\n      //   'title':title,\n      //   'descriptiond':description,\n      //   'url': url,\n      //   'urlToImage':urlToImage,\n      //   'publishedAt':publishedAt,\n      //   'content':content,\n      // },\n      config\n    );\n    console.log(\"after\")\n    dispatch({ type: CREATE_TECH_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: CREATE_TECH_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}