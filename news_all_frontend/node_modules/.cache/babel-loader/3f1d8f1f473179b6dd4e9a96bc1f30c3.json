{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { techListReducer, createTechReducer } from '../src/reducers/techReducers';\nimport { userLoginReducer } from '../src/reducers/userReducers';\nconst reducer = combineReducers({\n  techList: techListReducer,\n  techCreate: createTechReducer,\n  userLogin: userLoginReducer\n});\nconst userInfoFromStorage = localStorage.getItem('userLogin') ? JSON.parse(localStorage.getItem('userLogin')) : null;\nconst initailState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/home/cos/Desktop/Development Project/News_Ad_website/backend/news_all_frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","techListReducer","createTechReducer","userLoginReducer","reducer","techList","techCreate","userLogin","userInfoFromStorage","localStorage","getItem","JSON","parse","initailState","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACIC,eADJ,EAEIC,iBAFJ,QAGO,8BAHP;AAKA,SACIC,gBADJ,QAEO,8BAFP;AAMA,MAAMC,OAAO,GAAGP,eAAe,CAAC;AAC5BQ,EAAAA,QAAQ,EAAEJ,eADkB;AAE5BK,EAAAA,UAAU,EAACJ,iBAFiB;AAI5BK,EAAAA,SAAS,EAACJ;AAJkB,CAAD,CAA/B;AAQA,MAAMK,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADwB,GACwB,IADpD;AAGA,MAAMG,YAAY,GAAG;AACjBN,EAAAA,SAAS,EAAE;AAAEO,IAAAA,QAAQ,EAAEN;AAAZ;AADM,CAArB;AAIA,MAAMO,UAAU,GAAG,CAAChB,KAAD,CAAnB;AAEA,MAAMiB,KAAK,GAAGpB,WAAW,CAACQ,OAAD,EACrBJ,mBAAmB,CAACF,eAAe,CAAC,GAAGiB,UAAJ,CAAhB,CADE,CAAzB;AAGA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n    techListReducer,\n    createTechReducer,\n} from '../src/reducers/techReducers'\n\nimport {\n    userLoginReducer\n} from '../src/reducers/userReducers'\n\n\n\nconst reducer = combineReducers({\n    techList: techListReducer,\n    techCreate:createTechReducer,\n\n    userLogin:userLoginReducer,\n\n})\n\nconst userInfoFromStorage = localStorage.getItem('userLogin') ? \n    JSON.parse(localStorage.getItem('userLogin')) : null\n\nconst initailState = {\n    userLogin: { userInfo: userInfoFromStorage},\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer,\n    composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store"]},"metadata":{},"sourceType":"module"}