{"ast":null,"code":"var _jsxFileName = \"/home/cos/Desktop/Development Project/News_Ad_website/backend/news_all/news_all_frontend/src/screens/LoginScreens.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { userLoginActions } from \"../actions/userActions\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Grid, Paper, Typography, Avatar, TextField, Button } from \"@mui/material\";\nimport FromControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport PersonOutlineIcon from '@mui/icons-material/PersonOutline';\nimport Loaders from \"../components/Loader\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport \"../css_styles/LoginScreen.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LoginScreens = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    error: loginUserError,\n    loading: loginUserLoading,\n    userInfo\n  } = userLogin;\n  useEffect(() => {\n    if (userInfo) {\n      navigate(\"/\");\n    }\n  });\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(userLoginActions(username, password));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 10,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          align: \"center\",\n          children: [loginUserLoading && /*#__PURE__*/_jsxDEV(Loaders, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 32\n          }, this), loginUserError && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            type: \"error\",\n            error: loginUserError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n            children: /*#__PURE__*/_jsxDEV(PersonOutlineIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"username\",\n          className: \"input\",\n          type: \"text\",\n          placeholder: \"username\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"password\",\n          className: \"input\",\n          type: \"password\",\n          placeholder: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          fullWidth: true,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FromControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            name: \"checkedB\",\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this),\n          label: \"Remember me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: login,\n          type: \"submit\",\n          color: \"primary\",\n          variant: \"contained\",\n          fullWidth: true,\n          children: \"Sign IN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/forgotPassword\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Forgot password ?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(LoginScreens, \"3DPX4HRedZ5mK1Wps3JCCOE0HDU=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n\n_c = LoginScreens;\nexport default LoginScreens;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginScreens\");","map":{"version":3,"sources":["/home/cos/Desktop/Development Project/News_Ad_website/backend/news_all/news_all_frontend/src/screens/LoginScreens.js"],"names":["React","useState","useEffect","useSelector","useDispatch","userLoginActions","Link","useNavigate","Grid","Paper","Typography","Avatar","TextField","Button","FromControlLabel","Checkbox","PersonOutlineIcon","Loaders","ErrorMessage","LoginScreens","username","setUsername","password","setPassword","dispatch","navigate","userLogin","state","error","loginUserError","loading","loginUserLoading","userInfo","submitHandler","e","preventDefault","target","value","login"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { userLoginActions } from \"../actions/userActions\";\nimport {Link} from \"react-router-dom\"\nimport {useNavigate} from \"react-router-dom\"\nimport { Grid,Paper,  Typography, Avatar, TextField,Button } from \"@mui/material\";\nimport FromControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport PersonOutlineIcon from '@mui/icons-material/PersonOutline';\nimport Loaders from \"../components/Loader\";\nimport ErrorMessage from \"../components/ErrorMessage\";\n\nimport \"../css_styles/LoginScreen.css\";\n\nconst LoginScreens = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const userLogin = useSelector((state) => state.userLogin)\n\n  const {\n    error:loginUserError,\n    loading:loginUserLoading,\n    userInfo\n  } = userLogin\n\n\n  useEffect(() => {\n    if(userInfo){\n      navigate(\"/\")\n    }\n  })\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(userLoginActions(username, password));\n  };\n\n  return (\n    <>\n    <Grid>\n      <Paper elevation={10} >\n        <Grid align='center' >\n          {loginUserLoading && <Loaders/>}\n          {loginUserError && <ErrorMessage type=\"error\" error={loginUserError} />}\n          <Avatar><PersonOutlineIcon/></Avatar>\n          <h2>sign In</h2>\n        </Grid>\n        <TextField\n          id=\"username\"\n          className=\"input\"\n          type=\"text\"\n          placeholder=\"username\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          required\n          fullWidth\n        />\n        <TextField\n          id=\"password\"\n          className=\"input\"\n          type=\"password\"\n          placeholder=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          fullWidth \n          required\n        />\n        <FromControlLabel\n          control={\n            <Checkbox\n              name=\"checkedB\"\n              color=\"primary\"\n              />\n            }\n          label=\"Remember me\"\n          />\n        <Button onClick={login} type='submit' color='primary' variant='contained' fullWidth>\n          Sign IN\n        </Button>\n        \n          <Link to=\"/forgotPassword\">\n            <Typography>\n              Forgot password ?\n            </Typography>\n            </Link>\n          <Link to=\"/register\">       \n            <Typography>\n              sign up\n            </Typography>\n          </Link>\n\n      </Paper>\n    </Grid>\n\n\n\n    </>\n  );\n};\n\nexport default LoginScreens;\n"]},"metadata":{},"sourceType":"module"}