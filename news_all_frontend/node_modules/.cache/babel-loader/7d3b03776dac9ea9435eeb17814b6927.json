{"ast":null,"code":"import React from \"react\";\nimport \"../css_styles/Table.css\";\nimport { Link } from \"react-router-dom\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport Loaders from \"../components/Loader\";\nimport { Grid, Paper, Typography, Avatar, TextField, Button, Table, TableBody, TableContainer, TableHead, TableRow, TablePagination, TableFooter } from \"@mui/material\";\n\nconst AdminTable = ({\n  createModelError,\n  modelCreateHandler,\n  listModelLoading,\n  listModelError,\n  deleteModelError,\n  listModel,\n  deleteModelLoading,\n  modelDeleteHandler,\n  redirect\n}) => {\n  // const cats = cat;\n  return {\n    /* <div>\n     {createModelError ? (\n       <ErrorMessage type=\"error\" error={createModelError} />\n     ) : createModelError ? (\n       <Loaders />\n     ) : (\n       <button onClick={modelCreateHandler}>Create {redirect} Post</button>\n     )}\n    </div>\n    {listModelLoading ? (\n     <Loaders />\n    ) : listModelError ? (\n     <ErrorMessage type=\"error\" error={listModelError} />\n    ) : (\n     <div className=\"post_table\">\n       {deleteModelError && (\n         <ErrorMessage type=\"error\" error={deleteModelError} />\n       )}\n       <table className=\"post_scroll\">\n         <thead>\n           <tr className=\"post_header\">\n             <th>id</th>\n             <th>title</th>\n             <th>isApproved</th>\n             <th>edit</th>\n             <th>delete</th>\n           </tr>\n         </thead>\n         <tbody>\n           {listModel.map((model) => (\n             <tr>\n               <td>{model.id}</td>\n               <td>{model.title}</td>\n               <td>{model.isApproved ? \"Yes\" : \"No\"}</td>\n               <Link to={`/${redirect}-update/${model.id}`}>\n                 <td>edit</td>\n               </Link>\n               {deleteModelLoading ? (\n                 <Loaders />\n               ) : (\n                 <td onClick={() => modelDeleteHandler(model.id)}>\n                   Delete\n                 </td>\n               )}\n             </tr>\n           ))}\n         </tbody>\n       </table>\n     </div>\n    )} */\n  };\n};\n\n_c = AdminTable;\nexport default AdminTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminTable\");","map":{"version":3,"sources":["/home/cos/Desktop/Development Project/News_Ad_website/backend/news_all/news_all_frontend/src/components/Table.js"],"names":["React","Link","ErrorMessage","Loaders","Grid","Paper","Typography","Avatar","TextField","Button","Table","TableBody","TableContainer","TableHead","TableRow","TablePagination","TableFooter","AdminTable","createModelError","modelCreateHandler","listModelLoading","listModelError","deleteModelError","listModel","deleteModelLoading","modelDeleteHandler","redirect"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,yBAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SACEC,IADF,EAEEC,KAFF,EAGEC,UAHF,EAIEC,MAJF,EAKEC,SALF,EAMEC,MANF,EAOEC,KAPF,EAQEC,SARF,EASEC,cATF,EAUEC,SAVF,EAWEC,QAXF,EAYEC,eAZF,EAaEC,WAbF,QAcO,eAdP;;AAiBA,MAAMC,UAAU,GAAG,CAAC;AACjBC,EAAAA,gBADiB;AAEjBC,EAAAA,kBAFiB;AAGjBC,EAAAA,gBAHiB;AAIjBC,EAAAA,cAJiB;AAKjBC,EAAAA,gBALiB;AAMjBC,EAAAA,SANiB;AAOjBC,EAAAA,kBAPiB;AAQjBC,EAAAA,kBARiB;AASjBC,EAAAA;AATiB,CAAD,KAYZ;AACL;AAEA,SAGI;AAAC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjDM,GAHJ;AAwDD,CAvED;;KAAMT,U;AAyEN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport \"../css_styles/Table.css\";\nimport { Link } from \"react-router-dom\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport Loaders from \"../components/Loader\";\nimport {\n  Grid,\n  Paper,\n  Typography,\n  Avatar,\n  TextField,\n  Button,\n  Table,\n  TableBody,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TablePagination,\n  TableFooter\n} from \"@mui/material\";\n\n\nconst AdminTable = ({\n   createModelError, \n   modelCreateHandler,\n   listModelLoading,\n   listModelError,\n   deleteModelError,\n   listModel,\n   deleteModelLoading,\n   modelDeleteHandler,\n   redirect\n   \n\n }) => {\n  // const cats = cat;\n\n  return (\n    \n\n      {/* <div>\n        {createModelError ? (\n          <ErrorMessage type=\"error\" error={createModelError} />\n        ) : createModelError ? (\n          <Loaders />\n        ) : (\n          <button onClick={modelCreateHandler}>Create {redirect} Post</button>\n        )}\n      </div>\n\n      {listModelLoading ? (\n        <Loaders />\n      ) : listModelError ? (\n        <ErrorMessage type=\"error\" error={listModelError} />\n      ) : (\n        <div className=\"post_table\">\n          {deleteModelError && (\n            <ErrorMessage type=\"error\" error={deleteModelError} />\n          )}\n          <table className=\"post_scroll\">\n            <thead>\n              <tr className=\"post_header\">\n                <th>id</th>\n                <th>title</th>\n                <th>isApproved</th>\n                <th>edit</th>\n                <th>delete</th>\n              </tr>\n            </thead>\n            <tbody>\n              {listModel.map((model) => (\n                <tr>\n                  <td>{model.id}</td>\n                  <td>{model.title}</td>\n                  <td>{model.isApproved ? \"Yes\" : \"No\"}</td>\n                  <Link to={`/${redirect}-update/${model.id}`}>\n                    <td>edit</td>\n                  </Link>\n                  {deleteModelLoading ? (\n                    <Loaders />\n                  ) : (\n                    <td onClick={() => modelDeleteHandler(model.id)}>\n                      Delete\n                    </td>\n                  )}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )} */}\n    \n  );\n};\n\nexport default AdminTable;\n"]},"metadata":{},"sourceType":"module"}